# Stubs for alembic.runtime.environment (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
#from ..operations import Operations as Operations
from .migration import MigrationContext as MigrationContext

class EnvironmentContext:
    config = ...  # type: Any
    script = ...  # type: Any
    context_opts = ...  # type: Any
    def __init__(self, config, script, **kw): ...
    def __enter__(self): ...
    def __exit__(self, *arg, **kw): ...
    def is_offline_mode(self): ...
    def is_transactional_ddl(self): ...
    def requires_connection(self): ...
    def get_head_revision(self): ...
    def get_head_revisions(self): ...
    def get_starting_revision_argument(self): ...
    def get_revision_argument(self): ...
    def get_tag_argument(self): ...
    def get_x_argument(self, as_dictionary=False): ...
    def configure(self, connection=None, url=None, dialect_name=None, transactional_ddl=None, transaction_per_migration=False, output_buffer=None, starting_rev=None, tag=None, template_args=None, render_as_batch=False, target_metadata=None, include_symbol=None, include_object=None, include_schemas=False, process_revision_directives=None, compare_type=False, compare_server_default=False, render_item=None, literal_binds=False, upgrade_token='', downgrade_token='', alembic_module_prefix='', sqlalchemy_module_prefix='', user_module_prefix=None, **kw): ...
    def run_migrations(self, **kw): ...
    def execute(self, sql, execution_options=None): ...
    def static_output(self, text): ...
    def begin_transaction(self): ...
    def get_context(self): ...
    def get_bind(self): ...
    def get_impl(self): ...
