# Stubs for alembic.ddl.mssql (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .base import AddColumn, ColumnDefault, ColumnName, ColumnNullable, ColumnType, RenameTable, alter_column, alter_table, format_column_name, format_server_default, format_table_name, format_type
from .impl import DefaultImpl
from sqlalchemy.sql.expression import ClauseElement, Executable
from typing import Any, Optional

class MSSQLImpl(DefaultImpl):
    __dialect__: str = ...
    transactional_ddl: bool = ...
    batch_separator: str = ...
    def __init__(self, *arg: Any, **kw: Any) -> None: ...
    def emit_begin(self) -> None: ...
    def emit_commit(self) -> None: ...
    def alter_column(self, table_name: Any, column_name: Any, nullable: Optional[Any] = ..., server_default: bool = ..., name: Optional[Any] = ..., type_: Optional[Any] = ..., schema: Optional[Any] = ..., existing_type: Optional[Any] = ..., existing_server_default: Optional[Any] = ..., existing_nullable: Optional[Any] = ..., **kw: Any) -> None: ...
    def create_index(self, index: Any) -> None: ...
    def bulk_insert(self, table: Any, rows: Any, **kw: Any) -> None: ...
    def drop_column(self, table_name: Any, column: Any, **kw: Any) -> None: ...

class _ExecDropConstraint(Executable, ClauseElement):
    tname: Any = ...
    colname: Any = ...
    type_: Any = ...
    def __init__(self, tname: Any, colname: Any, type_: Any) -> None: ...

class _ExecDropFKConstraint(Executable, ClauseElement):
    tname: Any = ...
    colname: Any = ...
    def __init__(self, tname: Any, colname: Any) -> None: ...

def visit_add_column(element: Any, compiler: Any, **kw: Any): ...
def mssql_add_column(compiler: Any, column: Any, **kw: Any): ...
def visit_column_nullable(element: Any, compiler: Any, **kw: Any): ...
def visit_column_default(element: Any, compiler: Any, **kw: Any): ...
def visit_rename_column(element: Any, compiler: Any, **kw: Any): ...
def visit_column_type(element: Any, compiler: Any, **kw: Any): ...
def visit_rename_table(element: Any, compiler: Any, **kw: Any): ...
