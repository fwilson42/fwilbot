# Stubs for alembic.ddl.base (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ..util.sqla_compat import _columns_for_constraint, _find_columns, _fk_spec, _is_type_bound, _table_for_constraint
from sqlalchemy.schema import DDLElement
from typing import Any, Optional

class AlterTable(DDLElement):
    table_name: Any = ...
    schema: Any = ...
    def __init__(self, table_name: Any, schema: Optional[Any] = ...) -> None: ...

class RenameTable(AlterTable):
    new_table_name: Any = ...
    def __init__(self, old_table_name: Any, new_table_name: Any, schema: Optional[Any] = ...) -> None: ...

class AlterColumn(AlterTable):
    column_name: Any = ...
    existing_type: Any = ...
    existing_nullable: Any = ...
    existing_server_default: Any = ...
    existing_comment: Any = ...
    def __init__(self, name: Any, column_name: Any, schema: Optional[Any] = ..., existing_type: Optional[Any] = ..., existing_nullable: Optional[Any] = ..., existing_server_default: Optional[Any] = ..., existing_comment: Optional[Any] = ...) -> None: ...

class ColumnNullable(AlterColumn):
    nullable: Any = ...
    def __init__(self, name: Any, column_name: Any, nullable: Any, **kw: Any) -> None: ...

class ColumnType(AlterColumn):
    type_: Any = ...
    def __init__(self, name: Any, column_name: Any, type_: Any, **kw: Any) -> None: ...

class ColumnName(AlterColumn):
    newname: Any = ...
    def __init__(self, name: Any, column_name: Any, newname: Any, **kw: Any) -> None: ...

class ColumnDefault(AlterColumn):
    default: Any = ...
    def __init__(self, name: Any, column_name: Any, default: Any, **kw: Any) -> None: ...

class AddColumn(AlterTable):
    column: Any = ...
    def __init__(self, name: Any, column: Any, schema: Optional[Any] = ...) -> None: ...

class DropColumn(AlterTable):
    column: Any = ...
    def __init__(self, name: Any, column: Any, schema: Optional[Any] = ...) -> None: ...

class ColumnComment(AlterColumn):
    comment: Any = ...
    def __init__(self, name: Any, column_name: Any, comment: Any, **kw: Any) -> None: ...

def visit_rename_table(element: Any, compiler: Any, **kw: Any): ...
def visit_add_column(element: Any, compiler: Any, **kw: Any): ...
def visit_drop_column(element: Any, compiler: Any, **kw: Any): ...
def visit_column_nullable(element: Any, compiler: Any, **kw: Any): ...
def visit_column_type(element: Any, compiler: Any, **kw: Any): ...
def visit_column_name(element: Any, compiler: Any, **kw: Any): ...
def visit_column_default(element: Any, compiler: Any, **kw: Any): ...
def quote_dotted(name: Any, quote: Any): ...
def format_table_name(compiler: Any, name: Any, schema: Any): ...
def format_column_name(compiler: Any, name: Any): ...
def format_server_default(compiler: Any, default: Any): ...
def format_type(compiler: Any, type_: Any): ...
def alter_table(compiler: Any, name: Any, schema: Any): ...
def drop_column(compiler: Any, name: Any): ...
def alter_column(compiler: Any, name: Any): ...
def add_column(compiler: Any, column: Any, **kw: Any): ...
