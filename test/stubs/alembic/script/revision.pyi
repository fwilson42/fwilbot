# Stubs for alembic.script.revision (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from ..util import compat
from typing import Any, Optional

class RevisionError(Exception): ...

class RangeNotAncestorError(RevisionError):
    lower: Any = ...
    upper: Any = ...
    def __init__(self, lower: Any, upper: Any) -> None: ...

class MultipleHeads(RevisionError):
    heads: Any = ...
    argument: Any = ...
    def __init__(self, heads: Any, argument: Any) -> None: ...

class ResolutionError(RevisionError):
    argument: Any = ...
    def __init__(self, message: Any, argument: Any) -> None: ...

class RevisionMap:
    def __init__(self, generator: Any) -> None: ...
    def heads(self): ...
    def bases(self): ...
    heads: Any = ...
    def add_revision(self, revision: Any, _replace: bool = ...) -> None: ...
    def get_current_head(self, branch_label: Optional[Any] = ...): ...
    def get_revisions(self, id_: Any): ...
    def get_revision(self, id_: Any): ...
    def filter_for_lineage(self, targets: Any, check_against: Any, include_dependencies: bool = ...): ...
    def iterate_revisions(self, upper: Any, lower: Any, implicit_base: bool = ..., inclusive: bool = ..., assert_relative_length: bool = ..., select_for_downgrade: bool = ...): ...

class Revision:
    nextrev: Any = ...
    revision: Any = ...
    down_revision: Any = ...
    dependencies: Any = ...
    branch_labels: Any = ...
    @classmethod
    def verify_rev_id(cls, revision: Any) -> None: ...
    def __init__(self, revision: Any, down_revision: Any, dependencies: Optional[Any] = ..., branch_labels: Optional[Any] = ...) -> None: ...
    def add_nextrev(self, revision: Any) -> None: ...
    @property
    def is_head(self): ...
    @property
    def is_base(self): ...
    @property
    def is_branch_point(self): ...
    @property
    def is_merge_point(self): ...

def tuple_rev_as_scalar(rev: Any): ...
