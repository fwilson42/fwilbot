# Stubs for alembic.script.base (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from . import revision
from ..runtime import migration
from ..util import compat
from typing import Any, Optional


class ScriptDirectory:
    dir: Any = ...
    file_template: Any = ...
    version_locations: Any = ...
    truncate_slug_length: Any = ...
    sourceless: Any = ...
    output_encoding: Any = ...
    revision_map: Any = ...
    timezone: Any = ...
    hook_config: Any = ...

    def __init__(self,
                 dir: Any,
                 file_template: Any = ...,
                 truncate_slug_length: int = ...,
                 version_locations: Optional[Any] = ...,
                 sourceless: bool = ...,
                 output_encoding: str = ...,
                 timezone: Optional[Any] = ...,
                 hook_config: Optional[Any] = ...) -> None:
        ...

    @property
    def versions(self):
        ...

    @classmethod
    def from_config(cls, config: Any):
        ...

    def walk_revisions(self, base: str = ..., head: str = ...) -> None:
        ...

    def get_revisions(self, id_: Any):
        ...

    def get_all_current(self, id_: Any):
        ...

    def get_revision(self, id_: Any):
        ...

    def as_revision_number(self, id_: Any):
        ...

    def iterate_revisions(self, upper: Any, lower: Any):
        ...

    def get_current_head(self):
        ...

    def get_heads(self):
        ...

    def get_base(self):
        ...

    def get_bases(self):
        ...

    def run_env(self) -> None:
        ...

    @property
    def env_py_location(self):
        ...

    def generate_revision(self,
                          revid: Any,
                          message: Any,
                          head: Optional[Any] = ...,
                          refresh: bool = ...,
                          splice: bool = ...,
                          branch_labels: Optional[Any] = ...,
                          version_path: Optional[Any] = ...,
                          depends_on: Optional[Any] = ...,
                          **kw: Any):
        ...


class Script(revision.Revision):
    module: Any = ...
    path: Any = ...

    def __init__(self, module: Any, rev_id: Any, path: Any) -> None:
        ...

    @property
    def doc(self):
        ...

    @property
    def longdoc(self):
        ...

    @property
    def log_entry(self):
        ...

    def cmd_format(self,
                   verbose: Any,
                   include_branches: bool = ...,
                   include_doc: bool = ...,
                   include_parents: bool = ...,
                   tree_indicators: bool = ...):
        ...
