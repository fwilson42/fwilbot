# Stubs for jinja2.filters (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

def contextfilter(f): ...
def evalcontextfilter(f): ...
def environmentfilter(f): ...
def make_attrgetter(environment, attribute): ...
def do_forceescape(value): ...
def do_urlencode(value): ...
def do_replace(eval_ctx, s, old, new, count=None): ...
def do_upper(s): ...
def do_lower(s): ...
def do_xmlattr(_eval_ctx, d, autospace=True): ...
def do_capitalize(s): ...
def do_title(s): ...
def do_dictsort(value, case_sensitive=False, by=''): ...
def do_sort(environment, value, reverse=False, case_sensitive=False, attribute=None): ...
def do_default(value, default_value='', boolean=False): ...
def do_join(eval_ctx, value, d='', attribute=None): ...
def do_center(value, width=80): ...
def do_first(environment, seq): ...
def do_last(environment, seq): ...
def do_random(environment, seq): ...
def do_filesizeformat(value, binary=False): ...
def do_pprint(value, verbose=False): ...
def do_urlize(eval_ctx, value, trim_url_limit=None, nofollow=False, target=None): ...
def do_indent(s, width=4, indentfirst=False): ...
def do_truncate(s, length=255, killwords=False, end=''): ...
def do_wordwrap(environment, s, width=79, break_long_words=True, wrapstring=None): ...
def do_wordcount(s): ...
def do_int(value, default=0, base=10): ...
def do_float(value, default=0.0): ...
def do_format(value, *args, **kwargs): ...
def do_trim(value): ...
def do_striptags(value): ...
def do_slice(value, slices, fill_with=None): ...
def do_batch(value, linecount, fill_with=None): ...
def do_round(value, precision=0, method=''): ...
def do_groupby(environment, value, attribute): ...

class _GroupTuple(tuple):
    grouper = ...  # type: Any
    list = ...  # type: Any
    def __new__(cls, xxx_todo_changeme): ...

def do_sum(environment, iterable, attribute=None, start=0): ...
def do_list(value): ...
def do_mark_safe(value): ...
def do_mark_unsafe(value): ...
def do_reverse(value): ...
def do_attr(environment, obj, name): ...
def do_map(*args, **kwargs): ...
def do_select(*args, **kwargs): ...
def do_reject(*args, **kwargs): ...
def do_selectattr(*args, **kwargs): ...
def do_rejectattr(*args, **kwargs): ...

FILTERS = ...  # type: Any
