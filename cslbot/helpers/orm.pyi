# Stubs for cslbot.helpers.orm (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import configparser
from sqlalchemy import Column, UnicodeText, Unicode, Integer, DateTime
from sqlalchemy.orm import Session


def setup_db(session: Session, botconfig: configparser.ConfigParser, confdir: str) -> None:
    ...


class Base(object):
    id = Column(Integer)

    def __init__(self, *args, **kwargs) -> None:
        ...

    def __tablename__(self):
        ...


class Log(Base):
    source = UnicodeText()
    target = Unicode(length=512)
    flags = Integer()
    msg = UnicodeText()
    type = Column(UnicodeText)
    time = DateTime()


class Quotes(Base):
    quote = ...
    nick = ...
    submitter = ...
    accepted = ...


class Polls(Base):
    question = ...
    active = ...
    deleted = ...
    accepted = ...
    submitter = ...


class Poll_responses(Base):
    response = ...
    voter = ...
    pid = ...


class Weather_prefs(Base):
    nick = ...
    location = ...


class Scores(Base):
    nick = ...
    score = Column(Integer)


class Commands(Base):
    nick = ...
    command = ...
    channel = ...


class Stopwatches(Base):
    active = ...
    time = ...
    elapsed = ...


class Urls(Base):
    url = ...
    title = ...
    nick = ...
    time = Column(DateTime)


class Issues(Base):
    title = ...
    source = ...
    description = ...
    accepted = ...


class Notes(Base):
    note = ...
    submitter = ...
    nick = ...
    time = ...
    pending = ...


class Babble(Base):
    __table_args__ = ...
    key = ...
    source = ...
    target = ...
    word = ...
    freq = ...


class Babble2(Base):
    __table_args__ = ...
    key = ...
    source = ...
    target = ...
    word = ...
    freq = ...


class Babble_last(Base):
    last = ...


class Babble_count(Base):
    type = ...
    length = ...
    key = ...
    count = ...


class Ignore(Base):
    nick = ...
    expire = ...


class Tumblrs(Base):
    post = ...
    blogname = ...
    submitter = ...
    accepted = ...


class UrbanBlacklist(Base):
    word = ...


class Permissions(Base):
    nick = Column(UnicodeText)
    role = ...
    registered = ...
    time = ...
